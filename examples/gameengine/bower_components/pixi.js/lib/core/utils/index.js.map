{"version":3,"sources":["../../../src/core/utils/index.js"],"names":["uid","hex2rgb","hex2string","rgb2hex","getResolutionOfUrl","decomposeDataUri","getUrlFileExtension","getSvgSize","skipHello","sayHello","isWebGLSupported","sign","removeItems","isMobile","nextUid","saidHello","EventEmitter","pluginTarget","hex","out","toString","substr","length","rgb","url","defaultValue","resolution","RETINA_PREFIX","exec","parseFloat","undefined","dataUri","dataUriMatch","mediaType","toLowerCase","subType","encoding","data","extension","svgString","sizeMatch","size","Math","round","type","navigator","userAgent","indexOf","args","window","console","log","apply","contextOptions","stencil","failIfMajorPerformanceCaveat","WebGLRenderingContext","canvas","document","createElement","gl","getContext","success","getContextAttributes","loseContext","getExtension","e","n","arr","startIdx","removeCount","len","i","TextureCache","BaseTextureCache"],"mappings":"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","file":"index.js","sourcesContent":["import { DATA_URI, URL_FILE_EXTENSION, SVG_SIZE, VERSION } from '../const';\nimport settings from '../settings';\nimport EventEmitter from 'eventemitter3';\nimport pluginTarget from './pluginTarget';\nimport * as isMobile from 'ismobilejs';\n\nlet nextUid = 0;\nlet saidHello = false;\n\n/**\n * @namespace PIXI.utils\n */\nexport {\n    /**\n     * @see {@link https://github.com/kaimallea/isMobile}\n     *\n     * @memberof PIXI.utils\n     * @function isMobile\n     * @type {Object}\n     */\n    isMobile,\n    /**\n     * @see {@link https://github.com/primus/eventemitter3}\n     *\n     * @memberof PIXI.utils\n     * @class EventEmitter\n     * @type {EventEmitter}\n     */\n    EventEmitter,\n    /**\n     * @memberof PIXI.utils\n     * @function pluginTarget\n     * @type {mixin}\n     */\n    pluginTarget,\n};\n\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\nexport function uid()\n{\n    return ++nextUid;\n}\n\n/**\n * Converts a hex color number to an [R, G, B] array\n *\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The number to convert\n * @param  {number[]} [out=[]] If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color.\n */\nexport function hex2rgb(hex, out)\n{\n    out = out || [];\n\n    out[0] = ((hex >> 16) & 0xFF) / 255;\n    out[1] = ((hex >> 8) & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hex color number to a string.\n *\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex\n * @return {string} The string color.\n */\nexport function hex2string(hex)\n{\n    hex = hex.toString(16);\n    hex = '000000'.substr(0, 6 - hex.length) + hex;\n\n    return `#${hex}`;\n}\n\n/**\n * Converts a color as an [R, G, B] array to a hex number\n *\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - rgb array\n * @return {number} The color number\n */\nexport function rgb2hex(rgb)\n{\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255));\n}\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @return {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url, defaultValue)\n{\n    const resolution = settings.RETINA_PREFIX.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return defaultValue !== undefined ? defaultValue : 1;\n}\n\n/**\n * Typedef for decomposeDataUri return object.\n *\n * @typedef {object} DecomposedDataUri\n * @property {mediaType} Media type, eg. `image`\n * @property {subType} Sub type, eg. `png`\n * @property {encoding} Data encoding, eg. `base64`\n * @property {data} The actual data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nexport function decomposeDataUri(dataUri)\n{\n    const dataUriMatch = DATA_URI.exec(dataUri);\n\n    if (dataUriMatch)\n    {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            encoding: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            data: dataUriMatch[4],\n        };\n    }\n\n    return undefined;\n}\n\n/**\n * Get type of the image by regexp for extension. Returns undefined for unknown extensions.\n *\n * @memberof PIXI.utils\n * @function getUrlFileExtension\n * @param {string} url - the image path\n * @return {string|undefined} image extension\n */\nexport function getUrlFileExtension(url)\n{\n    const extension = URL_FILE_EXTENSION.exec(url);\n\n    if (extension)\n    {\n        return extension[1].toLowerCase();\n    }\n\n    return undefined;\n}\n\n/**\n * Typedef for Size object.\n *\n * @typedef {object} Size\n * @property {width} Width component\n * @property {height} Height component\n */\n\n/**\n * Get size from an svg string using regexp.\n *\n * @memberof PIXI.utils\n * @function getSvgSize\n * @param {string} svgString - a serialized svg element\n * @return {Size|undefined} image extension\n */\nexport function getSvgSize(svgString)\n{\n    const sizeMatch = SVG_SIZE.exec(svgString);\n    const size = {};\n\n    if (sizeMatch)\n    {\n        size[sizeMatch[1]] = Math.round(parseFloat(sizeMatch[3]));\n        size[sizeMatch[5]] = Math.round(parseFloat(sizeMatch[7]));\n    }\n\n    return size;\n}\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\nexport function skipHello()\n{\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever makes you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nexport function sayHello(type)\n{\n    if (saidHello)\n    {\n        return;\n    }\n\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n    {\n        const args = [\n            `\\n %c %c %c Pixi.js ${VERSION} - ✰ ${type} ✰  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \\n\\n`,\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff66a5; background: #030307; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ffc3dc; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n        ];\n\n        window.console.log.apply(console, args);\n    }\n    else if (window.console)\n    {\n        window.console.log(`Pixi.js ${VERSION} - ${type} - http://www.pixijs.com/`);\n    }\n\n    saidHello = true;\n}\n\n/**\n * Helper for checking for webgl support\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} is webgl supported\n */\nexport function isWebGLSupported()\n{\n    const contextOptions = { stencil: true, failIfMajorPerformanceCaveat: true };\n\n    try\n    {\n        if (!window.WebGLRenderingContext)\n        {\n            return false;\n        }\n\n        const canvas = document.createElement('canvas');\n        let gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n\n        const success = !!(gl && gl.getContextAttributes().stencil);\n\n        if (gl)\n        {\n            const loseContext = gl.getExtension('WEBGL_lose_context');\n\n            if (loseContext)\n            {\n                loseContext.loseContext();\n            }\n        }\n\n        gl = null;\n\n        return success;\n    }\n    catch (e)\n    {\n        return false;\n    }\n}\n\n/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nexport function sign(n)\n{\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n\n/**\n * Remove a range of items from an array\n *\n * @memberof PIXI.utils\n * @function removeItems\n * @param {Array<*>} arr The target array\n * @param {number} startIdx The index to begin removing from (inclusive)\n * @param {number} removeCount How many items to remove\n */\nexport function removeItems(arr, startIdx, removeCount)\n{\n    const length = arr.length;\n\n    if (startIdx >= length || removeCount === 0)\n    {\n        return;\n    }\n\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n\n    const len = length - removeCount;\n\n    for (let i = startIdx; i < len; ++i)\n    {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nexport const TextureCache = {};\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nexport const BaseTextureCache = {};\n"]}