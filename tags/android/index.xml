<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on www.mirkosertic.de</title>
    <link>https://www.mirkosertic.de/tags/android/</link>
    <description>Recent content in Android on www.mirkosertic.de</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Mirko Sertic</copyright>
    <lastBuildDate>Tue, 19 Nov 2024 12:01:27 +0100</lastBuildDate>
    <atom:link href="https://www.mirkosertic.de/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a Touch-Responsive OpenGL Triangle on Android</title>
      <link>https://www.mirkosertic.de/blog/2013/09/opengl2-on-android-example/</link>
      <pubDate>Thu, 05 Sep 2013 08:46:56 +0200</pubDate>
      <guid>https://www.mirkosertic.de/blog/2013/09/opengl2-on-android-example/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The last days i fiddled a bit with OpenGL 2 on Android. The Android OpenGL tutorials are a bit outdated, so i had to do some API research by myself and copy and merge the provided examples together. Here is a screenshot of the running OpenGL App:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://www.mirkosertic.de/media/openglandroidapp.png&#34; alt=&#34;openglandroidapp&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;It supports touch events to rotate a triangle around and render the animation.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;To run OpenGL, we need the base Activity class as follows:&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Building a Real-time Face Detection App: OpenCV meets Android</title>
      <link>https://www.mirkosertic.de/blog/2013/07/realtime-face-detection-on-android-using-opencv/</link>
      <pubDate>Sat, 27 Jul 2013 06:20:34 +0200</pubDate>
      <guid>https://www.mirkosertic.de/blog/2013/07/realtime-face-detection-on-android-using-opencv/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;There is a cool computer vision library called &lt;a href=&#34;http://opencv.org/&#34;&gt;OpenCV&lt;/a&gt; available. Using OpenCV, we can do stuff like object detection, feature extraction and other computer vision tasks. OpenCV is a native library, but it also comes with JNI Wrappers for Java and the Android platform.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;For the beginning, i want to implement real time face detection on my Samsung Galaxy S3 with OpenCV and some Java code. Here is a screenshot of the final result:&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>High performance Android handwriting</title>
      <link>https://www.mirkosertic.de/blog/2013/07/high-performance-android-handwriting/</link>
      <pubDate>Tue, 09 Jul 2013 07:56:21 +0200</pubDate>
      <guid>https://www.mirkosertic.de/blog/2013/07/high-performance-android-handwriting/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;For one of my Android Apps &lt;a href=&#34;https://play.google.com/store/apps/details?id=de.mirkosertic.easypaint&#34;&gt;Leas Painting App&lt;/a&gt; i needed to implement a sketching and handwriting functionality. The user must be able to draw with his fingers on the canvas and sketch something. This is a screenshot of my App:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://www.mirkosertic.de/media/leaspaintingapp.png&#34; alt=&#34;leaspaintingapp&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;But on my way i had to tweak with Android to make the App responsive even on slower devices. Here are my findings about how to keep everything responsive and smooth:&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
