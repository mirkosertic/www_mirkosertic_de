<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>I18n on www.mirkosertic.de</title>
    <link>https://www.mirkosertic.de/tags/i18n/</link>
    <description>Recent content in I18n on www.mirkosertic.de</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Mirko Sertic</copyright>
    <lastBuildDate>Sat, 28 Jul 2012 02:37:33 +0200</lastBuildDate>
    
	<atom:link href="https://www.mirkosertic.de/tags/i18n/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>XML Resourcebundles and how to make I18N refactoring safe</title>
      <link>https://www.mirkosertic.de/blog/2012/07/xml-resourcebundles-and-how-to-make-i18n-refactoring-safe/</link>
      <pubDate>Sat, 28 Jul 2012 02:37:33 +0200</pubDate>
      
      <guid>https://www.mirkosertic.de/blog/2012/07/xml-resourcebundles-and-how-to-make-i18n-refactoring-safe/</guid>
      <description>Java Resourcebundles are cumbersome. Without good IDE support, you are lost. It is hard to maintain the different property files, keep them in sync and take care of correct character encoding. And even if you manage all this, you still have the resource keys hard coded in your source code. It is very hard to detect where your resource keys are used.
 But fortunately you don&amp;#8217;t have to live with these limitations!</description>
    </item>
    
  </channel>
</rss>