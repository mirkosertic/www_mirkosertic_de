{"version":3,"sources":["../../src/interaction/interactiveTarget.js"],"names":["interactive","interactiveChildren","hitArea","buttonMode","defaultCursor","_over","_isLeftDown","_isRightDown","_pointerOver","_pointerDown","_touchDown"],"mappings":";;;AAAA;;;;;;;;;;;;;;;kBAee;AACX;;;;;AAKAA,eAAa,KANF;;AAQX;;;;;;AAMAC,uBAAqB,IAdV;;AAgBX;;;;;;AAMAC,WAAS,IAtBE;;AAwBX;;;;;AAKAC,cAAY,KA7BD;;AA+BX;;;;;;;;AAQAC,iBAAe,SAvCJ;;AAyCX;AACA;;;;;;AAMAC,SAAO,KAhDI;;AAkDX;;;;;;AAMAC,eAAa,KAxDF;;AA0DX;;;;;;AAMAC,gBAAc,KAhEH;;AAkEX;;;;;;AAMAC,gBAAc,KAxEH;;AA0EX;;;;;;AAMAC,gBAAc,KAhFH;;AAkFX;;;;;;AAMAC,cAAY;AAxFD,C","file":"interactiveTarget.js","sourcesContent":["/**\n * Default property values of interactive objects\n * Used by {@link PIXI.interaction.InteractionManager} to automatically give all DisplayObjects these properties\n *\n * @mixin\n * @name interactiveTarget\n * @memberof PIXI.interaction\n * @example\n *      function MyObject() {}\n *\n *      Object.assign(\n *          MyObject.prototype,\n *          PIXI.interaction.interactiveTarget\n *      );\n */\nexport default {\n    /**\n     * Determines if the displayObject be clicked/touched\n     *\n     * @inner {boolean}\n     */\n    interactive: false,\n\n    /**\n     * Determines if the children to the displayObject can be clicked/touched\n     * Setting this to false allows pixi to bypass a recursive hitTest function\n     *\n     * @inner {boolean}\n     */\n    interactiveChildren: true,\n\n    /**\n     * Interaction shape. Children will be hit first, then this shape will be checked.\n     * Setting this will cause this shape to be checked in hit tests rather than the displayObject's bounds.\n     *\n     * @inner {PIXI.Rectangle|PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.RoundedRectangle}\n     */\n    hitArea: null,\n\n    /**\n     * If enabled, the mouse cursor will change when hovered over the displayObject if it is interactive\n     *\n     * @inner {boolean}\n     */\n    buttonMode: false,\n\n    /**\n     * If buttonMode is enabled, this defines what CSS cursor property is used when the mouse cursor\n     * is hovered over the displayObject\n     *\n     * @see https://developer.mozilla.org/en/docs/Web/CSS/cursor\n     *\n     * @inner {string}\n     */\n    defaultCursor: 'pointer',\n\n    // some internal checks..\n    /**\n     * Internal check to detect if the mouse cursor is hovered over the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _over: false,\n\n    /**\n     * Internal check to detect if the left mouse button is pressed on the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _isLeftDown: false,\n\n    /**\n     * Internal check to detect if the right mouse button is pressed on the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _isRightDown: false,\n\n    /**\n     * Internal check to detect if the pointer cursor is hovered over the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _pointerOver: false,\n\n    /**\n     * Internal check to detect if the pointer is down on the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _pointerDown: false,\n\n    /**\n     * Internal check to detect if a user has touched the displayObject\n     *\n     * @inner {boolean}\n     * @private\n     */\n    _touchDown: false,\n};\n"]}