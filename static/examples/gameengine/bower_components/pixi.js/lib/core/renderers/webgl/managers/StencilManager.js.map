{"version":3,"sources":["../../../../../src/core/renderers/webgl/managers/StencilManager.js"],"names":["StencilManager","renderer","stencilMaskStack","setMaskStack","gl","length","disable","STENCIL_TEST","enable","pushStencil","graphics","setObjectRenderer","plugins","_activeRenderTarget","attachStencilBuffer","sms","clear","STENCIL_BUFFER_BIT","stencilFunc","ALWAYS","push","colorMask","stencilOp","KEEP","INCR","render","NOTEQUAL","popStencil","pop","DECR","destroy","prototype","call","stencilStack"],"mappings":"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","file":"StencilManager.js","sourcesContent":["import WebGLManager from './WebGLManager';\n\n/**\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nexport default class StencilManager extends WebGLManager\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n        this.stencilMaskStack = null;\n    }\n\n    /**\n     * Changes the mask stack that is used by this manager.\n     *\n     * @param {PIXI.Graphics[]} stencilMaskStack - The mask stack\n     */\n    setMaskStack(stencilMaskStack)\n    {\n        this.stencilMaskStack = stencilMaskStack;\n\n        const gl = this.renderer.gl;\n\n        if (stencilMaskStack.length === 0)\n        {\n            gl.disable(gl.STENCIL_TEST);\n        }\n        else\n        {\n            gl.enable(gl.STENCIL_TEST);\n        }\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack. @alvin\n     *\n     * @param {PIXI.Graphics} graphics - The mask\n     */\n    pushStencil(graphics)\n    {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        this.renderer._activeRenderTarget.attachStencilBuffer();\n\n        const gl = this.renderer.gl;\n        const sms = this.stencilMaskStack;\n\n        if (sms.length === 0)\n        {\n            gl.enable(gl.STENCIL_TEST);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n            gl.stencilFunc(gl.ALWAYS, 1, 1);\n        }\n\n        sms.push(graphics);\n\n        gl.colorMask(false, false, false, false);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\n\n        this.renderer.plugins.graphics.render(graphics);\n\n        gl.colorMask(true, true, true, true);\n        gl.stencilFunc(gl.NOTEQUAL, 0, sms.length);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    }\n\n    /**\n     * TODO @alvin\n     */\n    popStencil()\n    {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        const gl = this.renderer.gl;\n        const sms = this.stencilMaskStack;\n\n        const graphics = sms.pop();\n\n        if (sms.length === 0)\n        {\n            // the stack is empty!\n            gl.disable(gl.STENCIL_TEST);\n        }\n        else\n        {\n            gl.colorMask(false, false, false, false);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\n\n            this.renderer.plugins.graphics.render(graphics);\n\n            gl.colorMask(true, true, true, true);\n            gl.stencilFunc(gl.NOTEQUAL, 0, sms.length);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        }\n    }\n\n    /**\n     * Destroys the mask stack.\n     *\n     */\n    destroy()\n    {\n        WebGLManager.prototype.destroy.call(this);\n\n        this.stencilMaskStack.stencilStack = null;\n    }\n}\n"]}